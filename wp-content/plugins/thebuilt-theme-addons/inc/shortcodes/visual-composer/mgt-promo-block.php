<?php

// VC [promo_block_wp]

vc_map(array(
   "name" 			=> "MGT Promo Block",
   "category" 		=> 'TheBuilt Content',
   "description"	=> "Block with content, background, fullwidth and parallax options",
   "base" 			=> "mgt_promo_block_wp",
   "class" 			=> "",
   "icon" 			=> "vc_mgt_promo_block",
   
   "params" 	=> array(

   		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background color",
			"param_name"	=> "background_color",
			"std"			=> "",
		),
   		array(
			"type"			=> "attach_image",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background image",
			"param_name"	=> "background_image_id",
			"std"			=> "",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background image repeat",
			"param_name"	=> "background_repeat",
			"value"			=> array(
				"No repeat"	=> "no-repeat",
				"Repeat"	=> "repeat",
				"Repeat X"	=> "repeat-x",
				"Repeat Y"	=> "repeat-y"
			),
			"std"			=> "no-repeat",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background image Parallax",
			"description"	=> "Use background image with height few more than block height for correct parallax work",
			"param_name"	=> "parallax",
			"value"			=> array(
				"Yes"	=> "1",
				"No"	=> "0"
			),
			"std"			=> "0",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background image Cover",
			"description"	=> "Background image will fit block by width",
			"dependency"	=> array(
				"element"	=> "parallax",
				"value"		=> Array("0"),
			),
			"param_name"	=> "coverimage",
			"value"			=> array(
				"Yes"	=> "1",
				"No"	=> "0"
			),
			"std"			=> "0",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block width (px or %)",
			"description"	=> "Leave empty to use uploaded background image width. Use 100% to show block fullwidth inside parent column.",
			"param_name"	=> "block_width",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block height (px)",
			"description"	=> "Leave empty to use uploaded background image height",
			"param_name"	=> "block_height",
			"std"			=> "",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Vertical align for block content",
			"param_name"	=> "content_va",
			"value"			=> array(
				"Top"	=> "top",
				"Middle"	=> "middle",
				"Bottom"	=> "bottom"
			),
			"std"			=> "middle",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Overlay block content with semi-transparent background",
			"param_name"	=> "darken",
			"value"			=> array(
				"Yes"	=> "darken",
				"No"	=> "no-darken"
			),
			"description"	=> "Use this option if you have light background image and want to show light text on it",
			"std"			=> "darken",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Overlay color",
			"param_name"	=> "darken_overlay_color",
			"dependency"	=> array(
				"element"	=> "darken",
				"value"		=> Array("darken"),
			),
			"std"			=> "rgba(0,0,0,0.3)",
			"description"	=> "Choose color with Alpha property to make overlay semi-transparent",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Overlay block content with semi-transparent background on hover",
			"param_name"	=> "animated",
			"value"			=> array(
				"Yes"	=> "1",
				"No"	=> "0"
			),
			"description"	=> "Block background will fade to selected color on block mouse hover",
			"std"			=> "1",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Overlay color for hover",
			"param_name"	=> "animated_overlay_color",
			"dependency"	=> array(
				"element"	=> "animated",
				"value"		=> Array("1"),
			),
			"std"			=> "rgba(0, 0, 0, 0.5)",
			"description"	=> "Choose color with Alpha property to make overlay semi-transparent",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Text color",
			"description"	=> "Use black color if you use light background",
			"param_name"	=> "text_color",
			"value"			=> array(
				"Black"	=> "black",
				"White"	=> "white"
			),
			"std"			=> "white",
		),
				array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Text color on block mouse hover",
			"param_name"	=> "text_color_hover",
			"value"			=> array(
				"Change to white"	=> "1",
				"Do not change"	=> "0"
			),
			"description"	=> "Enable if you want to change block content (text, links) color to white on block mouse hover. Useful if you set your block background color to dark on mouse hover.",
			"std"			=> "0",
		),
		array(
			"type"			=> "vc_link",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button with link",
			"description"	=> "Leave empty if you don't need button",
			"param_name"	=> "button_url",
			"std"			=> "",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Button style",
			"param_name"	=> "button_style",
			"value"			=> array(
				"Default"	=> "solid",
				"Black"	=> "solid-invert",
				"Grey"	=> "grey",
				"Bordered"	=> "bordered",
				"Bordered Black"	=> "borderedblack",
				"Bordered Grey"	=> "borderedgrey",
				"Bordered White"	=> "borderedwhite",
				"Red"	=> "red",
				"Green"	=> "green",
				"Text link dark"	=> "text",
				"Text link light (use on dark backgrounds)"	=> "textwhite"
			),
			"description"	=> "Change button style",
			"std"			=> "solid",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Button hover effect",
			"param_name"	=> "hover_effect",
			"value"			=> array(
				"Default"	=> "default",
				"[Shape] Grow"	=> "grow",
				"[Shape] Shrink"	=> "shrink",
				"[Shape] Pulse"	=> "pulse",
				"[Shape] Pulse Grow"	=> "pulse-grow",
				"[Shape] Pulse Shrink"	=> "pulse-shrink",
				"[Shape] Push"	=> "push",
				"[Shape] Pop"	=> "pop",
				"[Shape] Bounce In"	=> "bounce-in",
				"[Shape] Bounce Out"	=> "bounce-out",
				"[Shape] Rotate"	=> "rotate",
				"[Shape] Grow Rotate"	=> "grow-rotate",
				"[Shape] Float"	=> "float",
				"[Shape] Sink"	=> "sink",
				"[Shape] Bob"	=> "bob",
				"[Shape] Hang"	=> "hang",
				"[Shape] Skew"	=> "skew",
				"[Shape] Skew Forward"	=> "skew-forward",
				"[Shape] Skew Backward"	=> "skew-backward",
				"[Shape] Wobble Horizontal"	=> "wobble-horizontal",
				"[Shape] Wobble Vertical"	=> "wobble-vertical",
				"[Shape] Wobble To Bottom Right"	=> "wobble-to-bottom-right",
				"[Shape] Wobble To Top Right"	=> "wobble-to-top-right",
				"[Shape] Wobble Top"	=> "wobble-top",
				"[Shape] Wobble Bottom"	=> "wobble-bottom",
				"[Shape] Wobble Skew"	=> "wobble-skew",
				"[Shape] Buzz"	=> "buzz",
				"[Shape] Buzz Out"	=> "buzz-out",

				"[Background] Sweep To Right"	=> "sweep-to-right",
				"[Background] Sweep To Left"	=> "sweep-to-left",
				"[Background] Sweep To Bottom"	=> "sweep-to-bottom",
				"[Background] Sweep To Top"	=> "sweep-to-top",
				"[Background] Bounce To Right"	=> "bounce-to-right",
				"[Background] Bounce To Left"	=> "bounce-to-left",
				"[Background] Bounce To Bottom"	=> "bounce-to-bottom",
				"[Background] Bounce To Top"	=> "bounce-to-top",

				"[Icon] Icon Back"	=> "icon-back",
				"[Icon] Icon Forward"	=> "icon-forward",
				"[Icon] Icon Down"	=> "icon-down",
				"[Icon] Icon Up"	=> "icon-up",
				"[Icon] Icon Spin"	=> "icon-spin",
				"[Icon] Icon Drop"	=> "icon-drop",
				"[Icon] Icon Grow"	=> "icon-grow",
				"[Icon] Icon Shrink"	=> "icon-shrink",
				"[Icon] Icon Pulse"	=> "icon-pulse",
				"[Icon] Icon Pulse Grow"	=> "icon-pulse-grow",
				"[Icon] Icon Pulse Shrink"	=> "icon-pulse-shrink",
				"[Icon] Icon Push"	=> "icon-push",
				"[Icon] Icon Pop"	=> "icon-pop",
				"[Icon] Icon Bounce"	=> "icon-bounce",
				"[Icon] Icon Rotate"	=> "icon-rotate",
				"[Icon] Icon Grow Rotate"	=> "icon-grow-rotate",
				"[Icon] Icon Float"	=> "icon-float",
				"[Icon] Icon Sink"	=> "icon-sink",
				"[Icon] Icon Bob"	=> "icon-bob",
				"[Icon] Icon Hang"	=> "icon-hang",
				"[Icon] Icon Wobble Horizontal"	=> "icon-wobble-horizontal",
				"[Icon] Icon Wobble Vertical"	=> "icon-wobble-vertical",
				"[Icon] Icon Buzz"	=> "icon-buzz",
				"[Icon] Icon Buzz Out"	=> "icon-buzz-out",
			),
			"description"	=> "Change button hover effect (<a href='http://ianlunn.github.io/Hover/' target='_blank'>Preview effects</a>).",
			"std"			=> "default",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Button size",
			"param_name"	=> "button_size",
			"value"			=> array(
				"Small"	=> "small",
				"Normal"	=> "normal",
				"Large"	=> "large"
			),
			"description"	=> "",
			"std"			=> "normal",
			"group"			=> "Button",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Button icon name",
			"description"	=> "If you want to add icon to button you can input Font Awesome icon name here, for example <em>angle-left</em>. <a href='http://fortawesome.github.io/Font-Awesome/icons/' target='_blank'>Check all available icons names</a>.",
			"param_name"	=> "button_icon",
			"std"			=> "",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Button icon position",
			"param_name"	=> "button_icon_position",
			"value"			=> array(
				"Left"	=> "left",
				"Right"	=> "right"
			),
			"description"	=> "",
			"std"			=> "left",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Button Text size",
			"param_name"	=> "button_text_size",
			"value"			=> array(
				"Small"	=> "small",
				"Normal"	=> "normal",
				"Large"	=> "large"
			),
			"description"	=> "",
			"std"			=> "normal",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Button Text transform",
			"param_name"	=> "text_tranform",
			"value"			=> array(
				"None"	=> "none",
				"UPPERCASE"	=> "uppercase"
			),
			"description"	=> "",
			"std"			=> "none",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Button horizontal align",
			"param_name"	=> "button_align",
			"value"			=> array(
				"Left"	=> "left",
				"Center"	=> "center",
				"Right"	=> "right"
			),
			"description"	=> "",
			"std"			=> "center",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Button top margin",
			"param_name"	=> "button_top_margin",
			"value"			=> array(
				"Disable"	=> "disable",
				"Enable"	=> "enable"
			),
			"description"	=> "",
			"std"			=> "disable",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> true,
			"heading"		=> "Show button on block hover",
			"param_name"	=> "button_show_onhover",
			"value"			=> array(
				"No (Show button always)"	=> "0",
				"Yes (Hide button by default)"	=> "1"
			),
			"description"	=> "Enable this to show button only on hover.",
			"std"			=> "0",
			"group"			=> "Button",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block link (url)",
			"description"	=> "Add url here if you want to have link for overall block.",
			"param_name"	=> "block_url",
			"std"			=> "",
		),
		array(
			"type"			=> "textarea_html",
			"holder"		=> "div",
			"class" 		=> "mgt-promo-block-content-html",
			"admin_label" 	=> false,
			"heading"		=> "Block content",
			"param_name"	=> "content",
			"std"			=> '<p style="text-align: left;">PARAGRAPH text</p>
<h1 style="text-align: left;">H1 Header text</h1>
<h2 style="text-align: left;">H2 Header text</h2>
<h3 style="text-align: left;">H3 Header text</h3>
<h4 style="text-align: left;">H4 Header text</h4>
<h5 style="text-align: left;">H5 Header text</h5>
<em>EM tag text</em>
<i>I tag text</i>
<strong>Strong tag text</strong>
<b>B tag text</b>',
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "CSS Animation",
			"description"	=> "Select type of animation for element to be animated when it 'enters' the browsers viewport (Note: works only in modern browsers).",
			"param_name"	=> "css_animation",
			"value"			=> array(
				"No"	=> "",
				"Top to bottom"	=> "top-to-bottom",
				"Bottom to top"	=> "bottom-to-top",
				"Left to right"	=> "left-to-right",
				"Right to left"	=> "right-to-left",
				"Appear"	=> "appear",
			),
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Element ID",
			"description"	=> "Unique ID generated automatically for Custom CSS usage. WARNING: If you copied this element you must change this ID to new Unique value yourself!",
			"param_name"	=> "unique_block_id",
			"std"			=> rand(10000000000, 90000000000),
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H1&gt; tag font size",
			"description"	=> "For ex.: 25px",
			"param_name"	=> "format_h1_fontsize",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H1&gt; margin",
			"description"	=> "For ex.: 0 0 30px 0",
			"param_name"	=> "format_h1_margin",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H1&gt; tag text color",
			"param_name"	=> "format_h1_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H2&gt; tag font size",
			"description"	=> "For ex.: 20px",
			"param_name"	=> "format_h2_fontsize",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H2&gt; margin",
			"description"	=> "For ex.: 0 0 20px 0",
			"param_name"	=> "format_h2_margin",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H2&gt; tag text color",
			"param_name"	=> "format_h2_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H3&gt; tag font size",
			"description"	=> "For ex.: 15px",
			"param_name"	=> "format_h3_fontsize",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H3&gt; margin",
			"description"	=> "For ex.: 0 0 10px 0",
			"param_name"	=> "format_h3_margin",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H3&gt; tag text color",
			"param_name"	=> "format_h3_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;P&gt; tag font size",
			"description"	=> "For ex.: 12px",
			"param_name"	=> "format_p_fontsize",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;P&gt; margin",
			"description"	=> "For ex.: 0 0 5px 0",
			"param_name"	=> "format_p_margin",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;P&gt; tag text color",
			"param_name"	=> "format_p_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;A&gt; link tag text color",
			"param_name"	=> "format_a_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
		    'type' => 'css_editor',
		    'heading' => __( 'Css' ),
		    'param_name' => 'css',
		    'group' => __( 'Content Design options' ),
		),
   )

   
));
